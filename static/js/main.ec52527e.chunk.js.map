{"version":3,"sources":["componentes/Header.js","componentes/AgregarCitas.js","componentes/Cita.js","componentes/ListaCitas.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","AgregarCitas","namePetRef","React","createRef","nameOwner","dateRef","timeRef","symptomRef","state","error","createNewOrder","e","preventDefault","pet","_this","current","value","owner","date","time","symptom","setState","newOrder","id","uuid","createOrder","currentTarget","reset","existError","this","onSubmit","type","ref","placeholder","required","Component","Cita","deleteOrder","info","_this$props$info","onClick","ListaCitas","orders","console","log","Object","keys","length","message","map","order","componentes_Cita","key","App","concat","toConsumableArray","filter","ordersLS","localStorage","getItem","JSON","parse","setItem","stringify","componentes_Header","componentes_AgregarCitas","componentes_ListaCitas","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ec52527e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = props =>{\r\n    return (\r\n<header>\r\n        <h1 className=\"text-center\">{props.titulo}</h1>\r\n</header>\r\n)\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport uuid from 'uuid';\r\n\r\n\r\nclass AgregarCitas extends Component {\r\n    \r\n    namePetRef=React.createRef();\r\n    nameOwner=React.createRef();\r\n    dateRef=React.createRef();\r\n    timeRef=React.createRef();\r\n    symptomRef=React.createRef();\r\n    \r\n    \r\n    state = {\r\n        error : false\r\n    }\r\n\r\n     createNewOrder  = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const pet = this.namePetRef.current.value,\r\n              owner= this.nameOwner.current.value,\r\n              date = this.dateRef.current.value,\r\n              time = this.timeRef.current.value,\r\n              symptom = this.symptomRef.current.value;\r\n\r\n                if(pet === '' || owner === '' || date=== '' || time=== '' || symptom === ''){\r\n                    this.setState({\r\n                        error : true\r\n                    })\r\n                }else{\r\n                    const newOrder ={\r\n                        id:uuid(),\r\n                        pet,\r\n                        owner,\r\n                        date,\r\n                        time,\r\n                        symptom\r\n                    }\r\n                \r\n        \r\n        this.props.createOrder(newOrder);\r\n\r\n        e.currentTarget.reset();\r\n\r\n                this.setState({\r\n                    error: false\r\n                })\r\n            }         \r\n     } \r\n\r\n\r\n    render() {\r\n\r\n        const existError = this.state.error;\r\n\r\n        return (\r\n            <div className=\"card mt-5\">\r\n                <div className=\"card-body\">\r\n                    <h2 className=\"card-title text-center mb-5\">Agregar las citas aqui</h2>\r\n\r\n                    <form  onSubmit={this.createNewOrder}>\r\n\r\n                        <div className=\"form-group row\">\r\n\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Mascota</label>\r\n\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n\r\n                                <input type=\"text\" ref={this.namePetRef} className=\"form-control\" placeholder=\"Nombre Mascota\" required />\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-group row\">\r\n\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Nombre Dueño</label>\r\n\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n\r\n                                <input type=\"text\" ref={this.nameOwner} className=\"form-control\" placeholder=\"Nombre Dueño de la Mascota\"  required/>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"form-group row\">\r\n\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Fecha</label>\r\n\r\n                            <div className=\"col-sm-8 col-lg-4  mb-4 mb-lg-0\">\r\n\r\n                                <input type=\"date\" ref={this.dateRef} className=\"form-control\" required/>\r\n\r\n                            </div>\r\n\r\n\r\n\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Hora</label>\r\n\r\n                            <div className=\"col-sm-8 col-lg-4\">\r\n\r\n                                <input type=\"time\" ref={this.timeRef} className=\"form-control\" required/>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n\r\n\r\n                        <div className=\"form-group row\">\r\n\r\n                            <label className=\"col-sm-4 col-lg-2 col-form-label\">Sintoma</label>\r\n\r\n                            <div className=\"col-sm-8 col-lg-10\">\r\n\r\n                                <textarea className=\"form-control\" ref={this.symptomRef} required></textarea>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"form-group row justify-content-end\">\r\n\r\n                            <div className=\"col-sm-3\">\r\n\r\n                                <button type=\"submit\" className=\"btn btn-success w-100\">Agregar</button>\r\n\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n                 {existError ? <div className=\"alert alert-danger text-center\">Todos los campos son obligatorios</div> : ''}   \r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AgregarCitas;","import React, {Component} from 'react';\r\n\r\nclass Cita extends Component{\r\n\r\n    deleteOrder= () =>{\r\n        this.props.deleteOrder(this.props.info.id);\r\n    }\r\n\r\n    render(){\r\n\r\n        const {date, owner, pet, symptom , time , id} = this.props.info;\r\n        \r\n        return(\r\n            <div className=\"media mt-3\">\r\n                <div className=\"media-body\">\r\n                    <h3 className=\"mt-0\">{pet}</h3>\r\n                        <p className=\"card-text\"><span>Nombre del Dueño:</span>{owner}</p>\r\n                        <p className=\"card-text\"><span>Fecha:</span> {date}</p>\r\n                        <p className=\"card-text\"><span>Hora:</span> {time}</p>\r\n                        <p className=\"card-text\"><span>Sintomas:</span></p>\r\n                        <p className=\"card-text\">{symptom}</p>\r\n\r\n                            <button onClick={this.deleteOrder} className=\"btn btn-danger\">Borrar &times;\r\n\r\n                            </button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Cita;","import React, {Component} from 'react';\r\nimport Cita from './Cita'\r\nclass ListaCitas extends Component{\r\n    render(){\r\n\r\n        const orders = this.props.orders;\r\n\r\n        console.log(Object.keys(orders).length);\r\n\r\n        const message = Object.keys(orders).length === 0 ? 'No hay citas' : 'Administra tus citas aqui';\r\n\r\n        return(\r\n            <div className=\"card mt-5\">\r\n                <div className=\"card-body\">\r\n                    <h2 className=\"card-title text-center\">{message}</h2>\r\n                    <div className=\"lista-citas\">\r\n                        {Object.keys(this.props.orders).map(order=>(\r\n                             <Cita\r\n                                key={order}\r\n                                info = {this.props.orders[order]}\r\n                                deleteOrder={this.props.deleteOrder}\r\n                             /> ))}\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ListaCitas;","import React, { Component } from 'react';\nimport Header from './Header';\nimport AgregarCitas from './AgregarCitas';\nimport ListaCitas from './ListaCitas';\nclass App extends Component {\n  \n  state = {\n    orders:[]\n  }\n\n  componentDidMount(){\n   const ordersLS= localStorage.getItem('orders');\n      if(ordersLS){\n        this.setState({\n          orders : JSON.parse(ordersLS)\n        })\n      }\n  }\n\n  componentDidUpdate(){\n    localStorage.setItem(\n    'orders',\n    JSON.stringify(this.state.orders)\n    )\n  }\n\n\n  createOrder = (order) =>{\n    const orders =[...this.state.orders,order];\n      console.log(orders);\n      this.setState({\n        orders : orders\n      });\n  }\n  \n  deleteOrder = id =>{\n    const actuallyOrder =[...this.state.orders];\n    const orders = actuallyOrder.filter(order => order.id !== id);\n    this.setState({\n      orders:orders\n    })\n  }\n  \n  render() {\n    return (\n      <div className=\"container\">\n            <Header \n              titulo={'Administrador de pacientes'}\n            />\n           <div className=\"row\">\n              <div className=\"col-md-6\">\n                <AgregarCitas\n                    createOrder={this.createOrder}\n                  />\n              </div>\n                <div className=\"col-md-6\">\n                  <ListaCitas \n                    orders = {this.state.orders}\n                    deleteOrder={this.deleteOrder}\n                  />\n                </div>\n             </div> \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}